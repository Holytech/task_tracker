{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","Header","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.194d8a49.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) =>{\n    return (\n        <button \n        style={{backgroundColor: color}} \n        onClick={onClick}\n        className='btn'>{text}</button>\n    )\n}\n\nButton.propTypes={\n    color: PropTypes.string,\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import Button from './Button'\n\nconst Header = ({ onAdd, showAdd }) => {\n    \n    return (\n        <header className='header'>\n            <h1>Task Tracker</h1>\n            <Button onClick={onAdd} \n            color={showAdd ? 'red' : 'green'}\n            text={showAdd ? 'Close' : 'Add'} />\n        </header>\n    )\n}\n\nexport default Header","const Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>{task.text} \n            <b onClick={ () => onDelete(task.id)} style={{color:'red', cursor:'pointer'}}>X</b> \n            </h3>\n            <i>{task.day}</i>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\nconst Tasks = ({tasks, onDelete, onToggle}) =>{\n\n    return (\n        <>\n          {tasks.map((task) => ( \n          <Task key={task.id} \n          task={task} \n          onDelete={onDelete}\n          onToggle={onToggle} /> \n          ))}  \n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const[text, setText] = useState('')\n    const[day, setDay] = useState('')\n    const[reminder, setReminder] = useState(false)\n    \n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(!text){\n            alert('Please add task')\n            return\n        }\n\n        onAdd({text, day, reminder})\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label>Task</label>\n                <input type=\"text\" placeholder=\"Add Task\" value={text}\n                onChange={(e) => setText(e.target.value)} />\n            </div>\n            <div className=\"form-control\">\n                <label>Day & Time</label>\n                <input type=\"text\" placeholder=\"Add Day & Time\"\n                value={day} onChange={(e) => setDay(e.target.value)} />\n            </div>\n            <div className=\"form-control form-control-check\">\n            <label>Set Reminder</label>\n                <input type=\"checkbox\" \n                checked={reminder}\n                value={reminder}\n                onChange={(e) => setReminder(e.currentTarget.checked)}/>\n            </div>\n\n            <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n        </form>\n    )\n}\n\nexport default AddTask\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () =>{\n  const [showAddTask, setShowAddTask] = useState(false)\n    const [tasks, setTasks] = useState(\n        [\n            {\n                id: 1,\n                text: 'Doctors Appointment',\n                day: 'Feb 5th at 2:30pm',\n                reminder: true\n            },\n            {\n                id: 2,\n                text: 'Meeting at School',\n                day: 'Feb 6th at 1:30pm',\n                reminder: true\n            },\n            {\n                id: 3,\n                text: 'Food Shopping',\n                day: 'Feb 5th at 2:30pm',\n                reminder: false\n            }\n        ]\n    )\n\n    //Add Task\n    const addTask = (task) =>{\n      const id = Math.floor(Math.random() * 1000) +1\n\n      const newTask = {id, ...task}    \n      setTasks([...tasks, newTask])\n    }\n\n    //Delete a Task\n    const deleteTask = (id) =>{\n      setTasks(tasks.filter((task) => task.id !== id));\n    }\n\n    //Toggle Reminder\n    const toggleReminder = (id) =>{\n      setTasks(tasks.map((task) => \n      task.id === id ? {...task, reminder : !task.reminder}\n       : task))\n    }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} \n      showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ?\n        <Tasks tasks={tasks} \n        onDelete={deleteTask}\n        onToggle={toggleReminder} />\n      : 'No task to show. Add New task'}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}